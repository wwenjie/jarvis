syntax = "proto3";

package rag_svr;

option go_package = "rag_svr";

// 基础响应
message BaseRsp {
    uint32 code = 1;
    string msg = 2;
}

// 定义获取用户请求
message TestReq {
  uint32 seq_id = 1;
  string msg = 2;
}

// 定义获取用户响应
message TestRsp {
  uint32 code = 1;
  string msg = 2;
}

message Test2Req {
  uint32 seq_id = 1;
  string msg = 2;
}

message Test2Rsp {
  uint32 code = 1;
  string msg = 2;
}

// 用户管理
message UserInfo {
    uint64 user_id = 1;
    string user_name = 2;
    string email = 3;
    string create_time = 4;
    string update_time = 5;
}

message CreateUserReq {
    uint32 seq_id = 1;
    string username = 2;
    string email = 3;
    string password = 4;
}

message CreateUserRsp {
    uint32 code = 1;
    string msg = 2;
    UserInfo user_info = 3;
}

// 会话管理（MySQL）
message SessionInfo {
    uint64 session_id = 1;
    uint64 user_id = 2;
    string title = 3;  // 会话标题
    string summary = 4;  // 会话摘要
    string status = 5;  // 会话状态
    string create_time = 6;
    string update_time = 7;
    map<string, string> user_state = 8;  // 用户状态
    map<string, string> system_state = 9;  // 系统状态
    repeated ChatRecord chat_records = 10;   // 对话记录
    map<string, string> metadata = 11;       // 会话元数据
}

// 对话记录
message ChatRecord {
    uint64 chat_id = 1;
    uint64 session_id = 2;
    uint64 user_id = 3;
    string message = 4;
    string response = 5;
    string create_time = 6;
    string message_type = 7;  // text, image, etc.
    string status = 8;        // pending, completed, failed
}

// 创建会话请求
message CreateSessionReq {
    uint32 seq_id = 1;
    uint64 user_id = 2;
}

message CreateSessionRsp {
    uint32 code = 1;
    string msg = 2;
    SessionInfo session_info = 3;
}

// 结束会话请求
message EndSessionReq {
    uint32 seq_id = 1;
    uint64 session_id = 2;
}

message EndSessionRsp {
    uint32 code = 1;
    string msg = 2;
}

// 知识文档
message Document {
    uint64 doc_id = 1;
    uint64 user_id = 2;
    string title = 3;
    string content = 4;
    string metadata = 5;
    string create_time = 6;
    string update_time = 7;
}

message AddDocumentReq {
    uint32 seq_id = 1;
    uint64 user_id = 2;
    string title = 3;
    string content = 4;
    string metadata = 5;
}

message AddDocumentRsp {
    uint32 code = 1;
    string msg = 2;
    uint64 doc_id = 3;
}

message ListDocumentReq {
    uint64 user_id = 1;
    int32 page = 2;
    int32 page_size = 3;
}

message ListDocumentRsp {
    uint32 code = 1;
    string msg = 2;
    int64 total = 3;
    int32 page = 4;
    int32 page_size = 5;
    repeated Document documents = 6;
}

message SearchDocumentReq {
    uint32 seq_id = 1;
    uint64 user_id = 2;
    string query = 3;
    int32 top_k = 4;
}

message SearchDocumentRsp {
    uint32 code = 1;
    string msg = 2;
    repeated Document documents = 3;
    repeated float scores = 4;
}

// 会话管理
message GetSessionListReq {
    uint64 user_id = 1;
    string status = 2;  // 可选，会话状态过滤
    string start_time = 3;  // 可选，开始时间
    string end_time = 4;  // 可选，结束时间
    int32 page = 5;  // 页码，从1开始
    int32 page_size = 6;  // 每页大小
}

message GetSessionListRsp {
    uint32 code = 1;
    string msg = 2;
    int64 total = 3;  // 总数
    int32 page = 4;  // 当前页码
    int32 page_size = 5;  // 每页大小
    repeated SessionInfo session_list = 6;  // 会话列表
}

// 获取会话详情
message GetSessionReq {
    uint32 seq_id = 1;
    uint64 session_id = 2;
    uint64 user_id = 3;
}

message GetSessionRsp {
    uint32 code = 1;
    string msg = 2;
    SessionInfo session_info = 3;
}

// 删除文档
message DeleteDocumentReq {
    uint32 seq_id = 1;
    uint64 doc_id = 2;
    uint64 user_id = 3;
}

message DeleteDocumentRsp {
    uint32 code = 1;
    string msg = 2;
}

message CleanInactiveSessionsReq {
    int32 inactive_days = 1;  // 不活跃天数
}

message CleanInactiveSessionsRsp {
    uint32 code = 1;
    string msg = 2;
    int64 cleaned_count = 3;  // 清理的会话数量
}

// 记忆管理
message Memory {
    uint64 memory_id = 1;
    uint64 session_id = 2;
    uint64 user_id = 3;
    string content = 4;
    string memory_type = 5;
    double importance = 6;
    string metadata = 7;
    string create_time = 8;
    string update_time = 9;
    string expire_time = 10;
    int32 access_count = 11;
}

message AddMemoryReq {
    uint32 seq_id = 1;
    uint64 session_id = 2;
    uint64 user_id = 3;
    string content = 4;
    string memory_type = 5;
    double importance = 6;
    string metadata = 7;
}

message AddMemoryRsp {
    uint32 code = 1;
    string msg = 2;
    uint64 memory_id = 3;
}

message GetMemoryReq {
    uint32 seq_id = 1;
    uint64 memory_id = 2;
    uint64 user_id = 3;
}

message GetMemoryRsp {
    uint32 code = 1;
    string msg = 2;
    Memory memory = 3;
}

message SearchMemoriesReq {
    uint32 seq_id = 1;
    uint64 user_id = 2;
    string query = 3;
    int32 limit = 4;
}

message SearchMemoriesRsp {
    uint32 code = 1;
    string msg = 2;
    repeated Memory memories = 3;
}

message DeleteMemoryReq {
    uint32 seq_id = 1;
    uint64 memory_id = 2;
    uint64 user_id = 3;
    string reason = 4;
}

message DeleteMemoryRsp {
    uint32 code = 1;
    string msg = 2;
}

// 聊天记录管理
message AddChatRecordReq {
    uint32 seq_id = 1;
    uint64 session_id = 2;
    uint64 user_id = 3;
    string message = 4;
    string response = 5;
    string message_type = 6;
    string context = 7;
    string function_calls = 8;
    string metadata = 9;
}

message AddChatRecordRsp {
    uint32 code = 1;
    string msg = 2;
    uint64 chat_id = 3;
}

message GetChatRecordsReq {
    uint32 seq_id = 1;
    uint64 session_id = 2;
    int32 page = 3;
    int32 page_size = 4;
}

message GetChatRecordsRsp {
    uint32 code = 1;
    string msg = 2;
    int64 total = 3;
    int32 page = 4;
    int32 page_size = 5;
    repeated ChatRecord records = 6;
}

// 天气相关消息
message GetWeatherReq {
    uint32 seq_id = 1;
    string location = 2;
}

message GetWeatherRsp {
    uint32 code = 1;
    string msg = 2;
    WeatherInfo weather = 3;
}

message WeatherInfo {
    string location = 1;    // 位置
    string weather = 2;     // 天气状况
    float temperature = 3;  // 温度
    float humidity = 4;     // 湿度
    float wind_speed = 5;   // 风速
    string wind_dir = 6;    // 风向
    string update_time = 7; // 更新时间
}

// 24小时天气预报
message GetHourlyWeatherReq {
    uint32 seq_id = 1;
    string location = 2;
}

message GetHourlyWeatherRsp {
    uint32 code = 1;
    string msg = 2;
    string location = 3;
    repeated HourlyWeather hourly = 4;
}

message HourlyWeather {
    string time = 1;        // 时间
    string weather = 2;     // 天气状况
    float temperature = 3;  // 温度
    float humidity = 4;     // 湿度
    float wind_speed = 5;   // 风速
    string wind_dir = 6;    // 风向
}

// 15天天气预报
message GetDailyWeatherReq {
    uint32 seq_id = 1;
    string location = 2;
}

message GetDailyWeatherRsp {
    uint32 code = 1;
    string msg = 2;
    string location = 3;
    repeated DailyWeather daily = 4;
}

message DailyWeather {
    string date = 1;        // 日期
    string text_day = 2;    // 白天天气
    string text_night = 3;  // 夜间天气
    float high_temp = 4;    // 最高温度
    float low_temp = 5;     // 最低温度
    float rainfall = 6;     // 降雨量
    float precip = 7;       // 降水概率
    string wind_dir = 8;    // 风向
    float wind_speed = 9;   // 风速
    string wind_scale = 10; // 风力等级
    float humidity = 11;    // 湿度
}

// 定义用户服务
service RagService {
  // 获取用户信息的RPC方法
  rpc Test (TestReq) returns (TestRsp);
  rpc Test2 (Test2Req) returns (Test2Rsp);

  // 用户管理
  rpc CreateUser (CreateUserReq) returns (CreateUserRsp);

  // 会话管理
  rpc CreateSession(CreateSessionReq) returns (CreateSessionRsp);
  rpc GetSession(GetSessionReq) returns (GetSessionRsp);
  rpc EndSession(EndSessionReq) returns (EndSessionRsp);
  rpc GetSessionList(GetSessionListReq) returns (GetSessionListRsp);
  rpc CleanInactiveSessions(CleanInactiveSessionsReq) returns (CleanInactiveSessionsRsp);

  // 知识文档
  rpc AddDocument(AddDocumentReq) returns (AddDocumentRsp);
  rpc DeleteDocument(DeleteDocumentReq) returns (DeleteDocumentRsp);
  rpc SearchDocument(SearchDocumentReq) returns (SearchDocumentRsp);
  rpc ListDocument(ListDocumentReq) returns (ListDocumentRsp);

  // 记忆管理
  rpc AddMemory(AddMemoryReq) returns (AddMemoryRsp);
  rpc GetMemory(GetMemoryReq) returns (GetMemoryRsp);
  rpc SearchMemories(SearchMemoriesReq) returns (SearchMemoriesRsp);
  rpc DeleteMemory(DeleteMemoryReq) returns (DeleteMemoryRsp);

  // 聊天记录管理
  rpc AddChatRecord(AddChatRecordReq) returns (AddChatRecordRsp);
  rpc GetChatRecords(GetChatRecordsReq) returns (GetChatRecordsRsp);

  // 天气服务
  rpc GetWeather(GetWeatherReq) returns (GetWeatherRsp);
  rpc GetHourlyWeather(GetHourlyWeatherReq) returns (GetHourlyWeatherRsp);
  rpc GetDailyWeather(GetDailyWeatherReq) returns (GetDailyWeatherRsp);
}