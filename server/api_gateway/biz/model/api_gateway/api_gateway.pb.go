// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: api_gateway.proto

package api_gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	_ "server/api_gateway/biz/model/api"
	rag_svr "server/api_gateway/biz/model/rag_svr"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 基础响应
type BaseRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *BaseRsp) Reset() {
	*x = BaseRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRsp) ProtoMessage() {}

func (x *BaseRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRsp.ProtoReflect.Descriptor instead.
func (*BaseRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *BaseRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 测试接口
type PingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingReq) Reset() {
	*x = PingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReq) ProtoMessage() {}

func (x *PingReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReq.ProtoReflect.Descriptor instead.
func (*PingReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{1}
}

type PingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *PingRsp) Reset() {
	*x = PingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRsp) ProtoMessage() {}

func (x *PingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRsp.ProtoReflect.Descriptor instead.
func (*PingRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *PingRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PingRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId string `protobuf:"bytes,1,opt,name=seq_id,json=seqId,proto3" form:"seq_id" json:"seq_id,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" query:"msg" vd:"$!=''"`
	Msg2  string `protobuf:"bytes,3,opt,name=msg2,proto3" json:"msg2,omitempty" query:"msg2"`
	Raw   string `protobuf:"bytes,4,opt,name=raw,proto3" json:"raw,omitempty" raw_body:"raw"`
}

func (x *TestReq) Reset() {
	*x = TestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReq) ProtoMessage() {}

func (x *TestReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReq.ProtoReflect.Descriptor instead.
func (*TestReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *TestReq) GetSeqId() string {
	if x != nil {
		return x.SeqId
	}
	return ""
}

func (x *TestReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TestReq) GetMsg2() string {
	if x != nil {
		return x.Msg2
	}
	return ""
}

func (x *TestReq) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type TestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *TestRsp) Reset() {
	*x = TestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRsp) ProtoMessage() {}

func (x *TestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRsp.ProtoReflect.Descriptor instead.
func (*TestRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *TestRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TestRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Test2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId uint32 `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" form:"seq_id" json:"seq_id,omitempty" vd:"$>0"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *Test2Req) Reset() {
	*x = Test2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Req) ProtoMessage() {}

func (x *Test2Req) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Req.ProtoReflect.Descriptor instead.
func (*Test2Req) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *Test2Req) GetSeqId() uint32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Test2Req) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Test2Rsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *Test2Rsp) Reset() {
	*x = Test2Rsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Rsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Rsp) ProtoMessage() {}

func (x *Test2Rsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Rsp.ProtoReflect.Descriptor instead.
func (*Test2Rsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *Test2Rsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Test2Rsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 会话管理
type CreateSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" vd:"$>0"`
}

func (x *CreateSessionReq) Reset() {
	*x = CreateSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionReq) ProtoMessage() {}

func (x *CreateSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionReq.ProtoReflect.Descriptor instead.
func (*CreateSessionReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *CreateSessionReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateSessionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	SessionId  uint64 `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" form:"session_id" json:"session_id,omitempty" query:"session_id"`
	CreateTime uint64 `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`
}

func (x *CreateSessionRsp) Reset() {
	*x = CreateSessionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSessionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRsp) ProtoMessage() {}

func (x *CreateSessionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRsp.ProtoReflect.Descriptor instead.
func (*CreateSessionRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSessionRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateSessionRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateSessionRsp) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CreateSessionRsp) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty" query:"session_id" vd:"$>0"`
	UserId    uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" vd:"$>0"`
}

func (x *GetSessionReq) Reset() {
	*x = GetSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionReq) ProtoMessage() {}

func (x *GetSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionReq.ProtoReflect.Descriptor instead.
func (*GetSessionReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *GetSessionReq) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *GetSessionReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetSessionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        uint32               `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg         string               `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	SessionInfo *rag_svr.SessionInfo `protobuf:"bytes,3,opt,name=session_info,json=sessionInfo,proto3" form:"session_info" json:"session_info,omitempty" query:"session_info"` // 使用完整的包名
}

func (x *GetSessionRsp) Reset() {
	*x = GetSessionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRsp) ProtoMessage() {}

func (x *GetSessionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRsp.ProtoReflect.Descriptor instead.
func (*GetSessionRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *GetSessionRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSessionRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSessionRsp) GetSessionInfo() *rag_svr.SessionInfo {
	if x != nil {
		return x.SessionInfo
	}
	return nil
}

type GetSessionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" vd:"$>0"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty" query:"page" vd:"$>0"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" query:"page_size" vd:"$>0"`
	Status   string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty" query:"status"` // 可选的状态过滤
}

func (x *GetSessionListReq) Reset() {
	*x = GetSessionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionListReq) ProtoMessage() {}

func (x *GetSessionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionListReq.ProtoReflect.Descriptor instead.
func (*GetSessionListReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *GetSessionListReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSessionListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSessionListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSessionListReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetSessionListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        uint32                 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg         string                 `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Total       int64                  `protobuf:"varint,3,opt,name=total,proto3" form:"total" json:"total,omitempty" query:"total"`
	Page        int32                  `protobuf:"varint,4,opt,name=page,proto3" form:"page" json:"page,omitempty" query:"page"`
	PageSize    int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty" query:"page_size"`
	SessionList []*rag_svr.SessionInfo `protobuf:"bytes,6,rep,name=session_list,json=sessionList,proto3" form:"session_list" json:"session_list,omitempty" query:"session_list"` // 使用完整的包名
}

func (x *GetSessionListRsp) Reset() {
	*x = GetSessionListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionListRsp) ProtoMessage() {}

func (x *GetSessionListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionListRsp.ProtoReflect.Descriptor instead.
func (*GetSessionListRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *GetSessionListRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSessionListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSessionListRsp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSessionListRsp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSessionListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSessionListRsp) GetSessionList() []*rag_svr.SessionInfo {
	if x != nil {
		return x.SessionList
	}
	return nil
}

type EndSessionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" form:"session_id" json:"session_id,omitempty" vd:"$>0"`
}

func (x *EndSessionReq) Reset() {
	*x = EndSessionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndSessionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndSessionReq) ProtoMessage() {}

func (x *EndSessionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndSessionReq.ProtoReflect.Descriptor instead.
func (*EndSessionReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *EndSessionReq) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type EndSessionRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *EndSessionRsp) Reset() {
	*x = EndSessionRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndSessionRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndSessionRsp) ProtoMessage() {}

func (x *EndSessionRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndSessionRsp.ProtoReflect.Descriptor instead.
func (*EndSessionRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *EndSessionRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *EndSessionRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 知识库管理
type AddDocumentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" vd:"$>0"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,omitempty" vd:"$!=''"`
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" form:"content" json:"content,omitempty" vd:"$!=''"`
	Metadata string `protobuf:"bytes,4,opt,name=metadata,proto3" form:"metadata" json:"metadata,omitempty"`
}

func (x *AddDocumentReq) Reset() {
	*x = AddDocumentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDocumentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentReq) ProtoMessage() {}

func (x *AddDocumentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentReq.ProtoReflect.Descriptor instead.
func (*AddDocumentReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *AddDocumentReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddDocumentReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddDocumentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddDocumentReq) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type AddDocumentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	DocId uint64 `protobuf:"varint,3,opt,name=doc_id,json=docId,proto3" form:"doc_id" json:"doc_id,omitempty" query:"doc_id"`
}

func (x *AddDocumentRsp) Reset() {
	*x = AddDocumentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDocumentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentRsp) ProtoMessage() {}

func (x *AddDocumentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentRsp.ProtoReflect.Descriptor instead.
func (*AddDocumentRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *AddDocumentRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddDocumentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddDocumentRsp) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

type DeleteDocumentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId  uint64 `protobuf:"varint,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty" query:"doc_id" vd:"$>0"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" vd:"$>0"`
}

func (x *DeleteDocumentReq) Reset() {
	*x = DeleteDocumentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentReq) ProtoMessage() {}

func (x *DeleteDocumentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentReq.ProtoReflect.Descriptor instead.
func (*DeleteDocumentReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteDocumentReq) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *DeleteDocumentReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteDocumentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *DeleteDocumentRsp) Reset() {
	*x = DeleteDocumentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRsp) ProtoMessage() {}

func (x *DeleteDocumentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRsp.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteDocumentRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteDocumentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ListDocumentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" vd:"$>0"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty" query:"page" vd:"$>0"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" query:"page_size" vd:"$>0"`
}

func (x *ListDocumentReq) Reset() {
	*x = ListDocumentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDocumentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentReq) ProtoMessage() {}

func (x *ListDocumentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentReq.ProtoReflect.Descriptor instead.
func (*ListDocumentReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{19}
}

func (x *ListDocumentReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListDocumentReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDocumentReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListDocumentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32      `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg       string      `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Total     int64       `protobuf:"varint,3,opt,name=total,proto3" form:"total" json:"total,omitempty" query:"total"`
	Page      int32       `protobuf:"varint,4,opt,name=page,proto3" form:"page" json:"page,omitempty" query:"page"`
	PageSize  int32       `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty" query:"page_size"`
	Documents []*Document `protobuf:"bytes,6,rep,name=documents,proto3" form:"documents" json:"documents,omitempty" query:"documents"`
}

func (x *ListDocumentRsp) Reset() {
	*x = ListDocumentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDocumentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentRsp) ProtoMessage() {}

func (x *ListDocumentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentRsp.ProtoReflect.Descriptor instead.
func (*ListDocumentRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{20}
}

func (x *ListDocumentRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListDocumentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListDocumentRsp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDocumentRsp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDocumentRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDocumentRsp) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId      uint64 `protobuf:"varint,1,opt,name=doc_id,json=docId,proto3" form:"doc_id" json:"doc_id,omitempty" query:"doc_id"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" form:"content" json:"content,omitempty" query:"content"`
	Metadata   string `protobuf:"bytes,4,opt,name=metadata,proto3" form:"metadata" json:"metadata,omitempty" query:"metadata"`
	CreateTime uint64 `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`
	UpdateTime uint64 `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{21}
}

func (x *Document) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *Document) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Document) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Document) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Document) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Document) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type SearchDocumentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id" vd:"$>0"`
	Query  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty" query:"query" vd:"$!=''"`
	TopK   int32  `protobuf:"varint,3,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty" query:"top_k" vd:"$>0"`
}

func (x *SearchDocumentReq) Reset() {
	*x = SearchDocumentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDocumentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDocumentReq) ProtoMessage() {}

func (x *SearchDocumentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDocumentReq.ProtoReflect.Descriptor instead.
func (*SearchDocumentReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{22}
}

func (x *SearchDocumentReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchDocumentReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchDocumentReq) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

type SearchDocumentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32            `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg     string            `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Results []*DocumentResult `protobuf:"bytes,3,rep,name=results,proto3" form:"results" json:"results,omitempty" query:"results"`
}

func (x *SearchDocumentRsp) Reset() {
	*x = SearchDocumentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDocumentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDocumentRsp) ProtoMessage() {}

func (x *SearchDocumentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDocumentRsp.ProtoReflect.Descriptor instead.
func (*SearchDocumentRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{23}
}

func (x *SearchDocumentRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchDocumentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchDocumentRsp) GetResults() []*DocumentResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type DocumentResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId   uint64  `protobuf:"varint,1,opt,name=doc_id,json=docId,proto3" form:"doc_id" json:"doc_id,omitempty" query:"doc_id"`
	Title   string  `protobuf:"bytes,2,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`
	Content string  `protobuf:"bytes,3,opt,name=content,proto3" form:"content" json:"content,omitempty" query:"content"`
	Score   float32 `protobuf:"fixed32,4,opt,name=score,proto3" form:"score" json:"score,omitempty" query:"score"`
}

func (x *DocumentResult) Reset() {
	*x = DocumentResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentResult) ProtoMessage() {}

func (x *DocumentResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentResult.ProtoReflect.Descriptor instead.
func (*DocumentResult) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{24}
}

func (x *DocumentResult) GetDocId() uint64 {
	if x != nil {
		return x.DocId
	}
	return 0
}

func (x *DocumentResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DocumentResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// 用户管理
type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" form:"username" json:"username,omitempty" vd:"$!=''"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" form:"email" json:"email,omitempty" vd:"$!=''"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" form:"password" json:"password,omitempty" vd:"$!=''"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{25}
}

func (x *CreateUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateUserRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	UserId   uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" query:"user_id"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" form:"username" json:"username,omitempty" query:"username"`
	Email    string `protobuf:"bytes,5,opt,name=email,proto3" form:"email" json:"email,omitempty" query:"email"`
}

func (x *CreateUserRsp) Reset() {
	*x = CreateUserRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRsp) ProtoMessage() {}

func (x *CreateUserRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRsp.ProtoReflect.Descriptor instead.
func (*CreateUserRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{26}
}

func (x *CreateUserRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateUserRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreateUserRsp) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateUserRsp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserRsp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// 记忆管理
type AddMemoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" vd:"$>0"`
	Content    string  `protobuf:"bytes,2,opt,name=content,proto3" form:"content" json:"content,omitempty" vd:"$!=''"`
	MemoryType string  `protobuf:"bytes,3,opt,name=memory_type,json=memoryType,proto3" form:"memory_type" json:"memory_type,omitempty" vd:"$in=['fact','reminder','preference','context']"`
	Importance float64 `protobuf:"fixed64,4,opt,name=importance,proto3" form:"importance" json:"importance,omitempty" vd:"$>=0 && $<=1"`
	Metadata   string  `protobuf:"bytes,5,opt,name=metadata,proto3" form:"metadata" json:"metadata,omitempty"` // JSON 格式的元数据
}

func (x *AddMemoryReq) Reset() {
	*x = AddMemoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemoryReq) ProtoMessage() {}

func (x *AddMemoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemoryReq.ProtoReflect.Descriptor instead.
func (*AddMemoryReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{27}
}

func (x *AddMemoryReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddMemoryReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddMemoryReq) GetMemoryType() string {
	if x != nil {
		return x.MemoryType
	}
	return ""
}

func (x *AddMemoryReq) GetImportance() float64 {
	if x != nil {
		return x.Importance
	}
	return 0
}

func (x *AddMemoryReq) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type AddMemoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg      string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	MemoryId uint64 `protobuf:"varint,3,opt,name=memory_id,json=memoryId,proto3" form:"memory_id" json:"memory_id,omitempty" query:"memory_id"`
}

func (x *AddMemoryRsp) Reset() {
	*x = AddMemoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemoryRsp) ProtoMessage() {}

func (x *AddMemoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemoryRsp.ProtoReflect.Descriptor instead.
func (*AddMemoryRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{28}
}

func (x *AddMemoryRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddMemoryRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddMemoryRsp) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

type GetMemoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryId uint64 `protobuf:"varint,1,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty" query:"memory_id" vd:"$>0"`
}

func (x *GetMemoryReq) Reset() {
	*x = GetMemoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoryReq) ProtoMessage() {}

func (x *GetMemoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoryReq.ProtoReflect.Descriptor instead.
func (*GetMemoryReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{29}
}

func (x *GetMemoryReq) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

type GetMemoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint32  `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg    string  `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Memory *Memory `protobuf:"bytes,3,opt,name=memory,proto3" form:"memory" json:"memory,omitempty" query:"memory"`
}

func (x *GetMemoryRsp) Reset() {
	*x = GetMemoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemoryRsp) ProtoMessage() {}

func (x *GetMemoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemoryRsp.ProtoReflect.Descriptor instead.
func (*GetMemoryRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{30}
}

func (x *GetMemoryRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetMemoryRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMemoryRsp) GetMemory() *Memory {
	if x != nil {
		return x.Memory
	}
	return nil
}

type SearchMemoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty" query:"query" vd:"$!=''"`
	Limit int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty" query:"limit" vd:"$>0"`
}

func (x *SearchMemoriesReq) Reset() {
	*x = SearchMemoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMemoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMemoriesReq) ProtoMessage() {}

func (x *SearchMemoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMemoriesReq.ProtoReflect.Descriptor instead.
func (*SearchMemoriesReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{31}
}

func (x *SearchMemoriesReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchMemoriesReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchMemoriesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32    `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg      string    `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Memories []*Memory `protobuf:"bytes,3,rep,name=memories,proto3" form:"memories" json:"memories,omitempty" query:"memories"`
}

func (x *SearchMemoriesRsp) Reset() {
	*x = SearchMemoriesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMemoriesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMemoriesRsp) ProtoMessage() {}

func (x *SearchMemoriesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMemoriesRsp.ProtoReflect.Descriptor instead.
func (*SearchMemoriesRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{32}
}

func (x *SearchMemoriesRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchMemoriesRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchMemoriesRsp) GetMemories() []*Memory {
	if x != nil {
		return x.Memories
	}
	return nil
}

type Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryId    uint64  `protobuf:"varint,1,opt,name=memory_id,json=memoryId,proto3" form:"memory_id" json:"memory_id,omitempty" query:"memory_id"`
	UserId      uint64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" query:"user_id"`
	Content     string  `protobuf:"bytes,3,opt,name=content,proto3" form:"content" json:"content,omitempty" query:"content"`
	MemoryType  string  `protobuf:"bytes,4,opt,name=memory_type,json=memoryType,proto3" form:"memory_type" json:"memory_type,omitempty" query:"memory_type"`
	Importance  float64 `protobuf:"fixed64,5,opt,name=importance,proto3" form:"importance" json:"importance,omitempty" query:"importance"`
	Metadata    string  `protobuf:"bytes,6,opt,name=metadata,proto3" form:"metadata" json:"metadata,omitempty" query:"metadata"`
	CreateTime  uint64  `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`
	UpdateTime  uint64  `protobuf:"varint,8,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"`
	ExpireTime  uint64  `protobuf:"varint,9,opt,name=expire_time,json=expireTime,proto3" form:"expire_time" json:"expire_time,omitempty" query:"expire_time"`
	AccessCount int32   `protobuf:"varint,10,opt,name=access_count,json=accessCount,proto3" form:"access_count" json:"access_count,omitempty" query:"access_count"`
}

func (x *Memory) Reset() {
	*x = Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{33}
}

func (x *Memory) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

func (x *Memory) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Memory) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Memory) GetMemoryType() string {
	if x != nil {
		return x.MemoryType
	}
	return ""
}

func (x *Memory) GetImportance() float64 {
	if x != nil {
		return x.Importance
	}
	return 0
}

func (x *Memory) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Memory) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Memory) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Memory) GetExpireTime() uint64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Memory) GetAccessCount() int32 {
	if x != nil {
		return x.AccessCount
	}
	return 0
}

// 记忆管理
type DeleteMemoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemoryId uint64 `protobuf:"varint,1,opt,name=memory_id,json=memoryId,proto3" json:"memory_id,omitempty" query:"memory_id" vd:"$>0"`
	Reason   string `protobuf:"bytes,2,opt,name=reason,proto3" form:"reason" json:"reason,omitempty"` // 删除原因，由大模型提供
}

func (x *DeleteMemoryReq) Reset() {
	*x = DeleteMemoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemoryReq) ProtoMessage() {}

func (x *DeleteMemoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemoryReq.ProtoReflect.Descriptor instead.
func (*DeleteMemoryReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteMemoryReq) GetMemoryId() uint64 {
	if x != nil {
		return x.MemoryId
	}
	return 0
}

func (x *DeleteMemoryReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DeleteMemoryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
}

func (x *DeleteMemoryRsp) Reset() {
	*x = DeleteMemoryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMemoryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMemoryRsp) ProtoMessage() {}

func (x *DeleteMemoryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMemoryRsp.ProtoReflect.Descriptor instead.
func (*DeleteMemoryRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteMemoryRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteMemoryRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 聊天记录相关消息
type ChatRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId      int64  `protobuf:"varint,1,opt,name=chat_id,json=chatId,proto3" form:"chat_id" json:"chat_id,omitempty" query:"chat_id"`                         // 聊天记录ID
	SessionId   int64  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" form:"session_id" json:"session_id,omitempty" query:"session_id"`          // 会话ID
	UserId      int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" query:"user_id"`                         // 用户ID
	Message     string `protobuf:"bytes,4,opt,name=message,proto3" form:"message" json:"message,omitempty" query:"message"`                                      // 用户消息
	Response    string `protobuf:"bytes,5,opt,name=response,proto3" form:"response" json:"response,omitempty" query:"response"`                                  // AI响应
	MessageType string `protobuf:"bytes,6,opt,name=message_type,json=messageType,proto3" form:"message_type" json:"message_type,omitempty" query:"message_type"` // 消息类型
	Status      string `protobuf:"bytes,7,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                          // 状态
	CreateTime  uint64 `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`     // 创建时间
}

func (x *ChatRecord) Reset() {
	*x = ChatRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRecord) ProtoMessage() {}

func (x *ChatRecord) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRecord.ProtoReflect.Descriptor instead.
func (*ChatRecord) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{36}
}

func (x *ChatRecord) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *ChatRecord) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *ChatRecord) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChatRecord) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatRecord) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *ChatRecord) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ChatRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatRecord) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AddChatRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId         int64  `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" form:"seq_id" json:"seq_id,omitempty" query:"seq_id"`                                        // 序列号
	SessionId     int64  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" form:"session_id" json:"session_id,omitempty" query:"session_id"`                    // 会话ID
	UserId        int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" form:"user_id" json:"user_id,omitempty" query:"user_id"`                                   // 用户ID
	Message       string `protobuf:"bytes,4,opt,name=message,proto3" form:"message" json:"message,omitempty" query:"message"`                                                // 用户消息
	Response      string `protobuf:"bytes,5,opt,name=response,proto3" form:"response" json:"response,omitempty" query:"response"`                                            // AI响应
	MessageType   string `protobuf:"bytes,6,opt,name=message_type,json=messageType,proto3" form:"message_type" json:"message_type,omitempty" query:"message_type"`           // 消息类型
	Context       string `protobuf:"bytes,7,opt,name=context,proto3" form:"context" json:"context,omitempty" query:"context"`                                                // 上下文
	FunctionCalls string `protobuf:"bytes,8,opt,name=function_calls,json=functionCalls,proto3" form:"function_calls" json:"function_calls,omitempty" query:"function_calls"` // 函数调用
	Metadata      string `protobuf:"bytes,9,opt,name=metadata,proto3" form:"metadata" json:"metadata,omitempty" query:"metadata"`                                            // 元数据
}

func (x *AddChatRecordReq) Reset() {
	*x = AddChatRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChatRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChatRecordReq) ProtoMessage() {}

func (x *AddChatRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChatRecordReq.ProtoReflect.Descriptor instead.
func (*AddChatRecordReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{37}
}

func (x *AddChatRecordReq) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *AddChatRecordReq) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *AddChatRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddChatRecordReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddChatRecordReq) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *AddChatRecordReq) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *AddChatRecordReq) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *AddChatRecordReq) GetFunctionCalls() string {
	if x != nil {
		return x.FunctionCalls
	}
	return ""
}

func (x *AddChatRecordReq) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type AddChatRecordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`                         // 状态码
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`                              // 状态信息
	ChatId int64  `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" form:"chat_id" json:"chat_id,omitempty" query:"chat_id"` // 聊天记录ID
}

func (x *AddChatRecordRsp) Reset() {
	*x = AddChatRecordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChatRecordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChatRecordRsp) ProtoMessage() {}

func (x *AddChatRecordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChatRecordRsp.ProtoReflect.Descriptor instead.
func (*AddChatRecordRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{38}
}

func (x *AddChatRecordRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddChatRecordRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddChatRecordRsp) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

type GetChatRecordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId     int64 `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" form:"seq_id" json:"seq_id,omitempty" query:"seq_id"`                     // 序列号
	SessionId int64 `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" form:"session_id" json:"session_id,omitempty" query:"session_id"` // 会话ID
	Page      int32 `protobuf:"varint,3,opt,name=page,proto3" form:"page" json:"page,omitempty" query:"page"`                                        // 页码
	PageSize  int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty" query:"page_size"`      // 每页大小
}

func (x *GetChatRecordsReq) Reset() {
	*x = GetChatRecordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatRecordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatRecordsReq) ProtoMessage() {}

func (x *GetChatRecordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatRecordsReq.ProtoReflect.Descriptor instead.
func (*GetChatRecordsReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{39}
}

func (x *GetChatRecordsReq) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *GetChatRecordsReq) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *GetChatRecordsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetChatRecordsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetChatRecordsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32         `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`                                   // 状态码
	Msg      string        `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`                                        // 状态信息
	Total    int64         `protobuf:"varint,3,opt,name=total,proto3" form:"total" json:"total,omitempty" query:"total"`                               // 总记录数
	Page     int32         `protobuf:"varint,4,opt,name=page,proto3" form:"page" json:"page,omitempty" query:"page"`                                   // 当前页码
	PageSize int32         `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty" query:"page_size"` // 每页大小
	Records  []*ChatRecord `protobuf:"bytes,6,rep,name=records,proto3" form:"records" json:"records,omitempty" query:"records"`                        // 聊天记录列表
}

func (x *GetChatRecordsRsp) Reset() {
	*x = GetChatRecordsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatRecordsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatRecordsRsp) ProtoMessage() {}

func (x *GetChatRecordsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatRecordsRsp.ProtoReflect.Descriptor instead.
func (*GetChatRecordsRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{40}
}

func (x *GetChatRecordsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetChatRecordsRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetChatRecordsRsp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatRecordsRsp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetChatRecordsRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetChatRecordsRsp) GetRecords() []*ChatRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// 天气相关消息
type GetWeatherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty" query:"location" vd:"$!=''"`
}

func (x *GetWeatherReq) Reset() {
	*x = GetWeatherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeatherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeatherReq) ProtoMessage() {}

func (x *GetWeatherReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeatherReq.ProtoReflect.Descriptor instead.
func (*GetWeatherReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{41}
}

func (x *GetWeatherReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetWeatherRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32       `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Weather *WeatherInfo `protobuf:"bytes,3,opt,name=weather,proto3" form:"weather" json:"weather,omitempty" query:"weather"`
}

func (x *GetWeatherRsp) Reset() {
	*x = GetWeatherRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeatherRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeatherRsp) ProtoMessage() {}

func (x *GetWeatherRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeatherRsp.ProtoReflect.Descriptor instead.
func (*GetWeatherRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{42}
}

func (x *GetWeatherRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetWeatherRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetWeatherRsp) GetWeather() *WeatherInfo {
	if x != nil {
		return x.Weather
	}
	return nil
}

type WeatherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    string  `protobuf:"bytes,1,opt,name=location,proto3" form:"location" json:"location,omitempty" query:"location"`                             // 位置
	Weather     string  `protobuf:"bytes,2,opt,name=weather,proto3" form:"weather" json:"weather,omitempty" query:"weather"`                                 // 天气状况
	Temperature float32 `protobuf:"fixed32,3,opt,name=temperature,proto3" form:"temperature" json:"temperature,omitempty" query:"temperature"`               // 温度
	Humidity    float32 `protobuf:"fixed32,4,opt,name=humidity,proto3" form:"humidity" json:"humidity,omitempty" query:"humidity"`                           // 湿度
	WindSpeed   float32 `protobuf:"fixed32,5,opt,name=wind_speed,json=windSpeed,proto3" form:"wind_speed" json:"wind_speed,omitempty" query:"wind_speed"`    // 风速
	WindDir     string  `protobuf:"bytes,6,opt,name=wind_dir,json=windDir,proto3" form:"wind_dir" json:"wind_dir,omitempty" query:"wind_dir"`                // 风向
	UpdateTime  string  `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` // 更新时间
}

func (x *WeatherInfo) Reset() {
	*x = WeatherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherInfo) ProtoMessage() {}

func (x *WeatherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherInfo.ProtoReflect.Descriptor instead.
func (*WeatherInfo) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{43}
}

func (x *WeatherInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *WeatherInfo) GetWeather() string {
	if x != nil {
		return x.Weather
	}
	return ""
}

func (x *WeatherInfo) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *WeatherInfo) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *WeatherInfo) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *WeatherInfo) GetWindDir() string {
	if x != nil {
		return x.WindDir
	}
	return ""
}

func (x *WeatherInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 24小时天气预报
type GetHourlyWeatherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty" query:"location" vd:"$!=''"`
}

func (x *GetHourlyWeatherReq) Reset() {
	*x = GetHourlyWeatherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHourlyWeatherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHourlyWeatherReq) ProtoMessage() {}

func (x *GetHourlyWeatherReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHourlyWeatherReq.ProtoReflect.Descriptor instead.
func (*GetHourlyWeatherReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{44}
}

func (x *GetHourlyWeatherReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetHourlyWeatherRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32           `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg      string           `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Location string           `protobuf:"bytes,3,opt,name=location,proto3" form:"location" json:"location,omitempty" query:"location"`
	Hourly   []*HourlyWeather `protobuf:"bytes,4,rep,name=hourly,proto3" form:"hourly" json:"hourly,omitempty" query:"hourly"`
}

func (x *GetHourlyWeatherRsp) Reset() {
	*x = GetHourlyWeatherRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHourlyWeatherRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHourlyWeatherRsp) ProtoMessage() {}

func (x *GetHourlyWeatherRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHourlyWeatherRsp.ProtoReflect.Descriptor instead.
func (*GetHourlyWeatherRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{45}
}

func (x *GetHourlyWeatherRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHourlyWeatherRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHourlyWeatherRsp) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetHourlyWeatherRsp) GetHourly() []*HourlyWeather {
	if x != nil {
		return x.Hourly
	}
	return nil
}

type HourlyWeather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        string  `protobuf:"bytes,1,opt,name=time,proto3" form:"time" json:"time,omitempty" query:"time"`                                          // 时间
	Weather     string  `protobuf:"bytes,2,opt,name=weather,proto3" form:"weather" json:"weather,omitempty" query:"weather"`                              // 天气状况
	Temperature float32 `protobuf:"fixed32,3,opt,name=temperature,proto3" form:"temperature" json:"temperature,omitempty" query:"temperature"`            // 温度
	Humidity    float32 `protobuf:"fixed32,4,opt,name=humidity,proto3" form:"humidity" json:"humidity,omitempty" query:"humidity"`                        // 湿度
	WindSpeed   float32 `protobuf:"fixed32,5,opt,name=wind_speed,json=windSpeed,proto3" form:"wind_speed" json:"wind_speed,omitempty" query:"wind_speed"` // 风速
	WindDir     string  `protobuf:"bytes,6,opt,name=wind_dir,json=windDir,proto3" form:"wind_dir" json:"wind_dir,omitempty" query:"wind_dir"`             // 风向
}

func (x *HourlyWeather) Reset() {
	*x = HourlyWeather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HourlyWeather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HourlyWeather) ProtoMessage() {}

func (x *HourlyWeather) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HourlyWeather.ProtoReflect.Descriptor instead.
func (*HourlyWeather) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{46}
}

func (x *HourlyWeather) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *HourlyWeather) GetWeather() string {
	if x != nil {
		return x.Weather
	}
	return ""
}

func (x *HourlyWeather) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *HourlyWeather) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *HourlyWeather) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *HourlyWeather) GetWindDir() string {
	if x != nil {
		return x.WindDir
	}
	return ""
}

// 15天天气预报
type GetDailyWeatherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty" query:"location" vd:"$!=''"`
}

func (x *GetDailyWeatherReq) Reset() {
	*x = GetDailyWeatherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyWeatherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyWeatherReq) ProtoMessage() {}

func (x *GetDailyWeatherReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyWeatherReq.ProtoReflect.Descriptor instead.
func (*GetDailyWeatherReq) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{47}
}

func (x *GetDailyWeatherReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetDailyWeatherRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32          `protobuf:"varint,1,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Msg      string          `protobuf:"bytes,2,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Location string          `protobuf:"bytes,3,opt,name=location,proto3" form:"location" json:"location,omitempty" query:"location"`
	Daily    []*DailyWeather `protobuf:"bytes,4,rep,name=daily,proto3" form:"daily" json:"daily,omitempty" query:"daily"`
}

func (x *GetDailyWeatherRsp) Reset() {
	*x = GetDailyWeatherRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyWeatherRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyWeatherRsp) ProtoMessage() {}

func (x *GetDailyWeatherRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyWeatherRsp.ProtoReflect.Descriptor instead.
func (*GetDailyWeatherRsp) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{48}
}

func (x *GetDailyWeatherRsp) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDailyWeatherRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDailyWeatherRsp) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GetDailyWeatherRsp) GetDaily() []*DailyWeather {
	if x != nil {
		return x.Daily
	}
	return nil
}

type DailyWeather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date      string  `protobuf:"bytes,1,opt,name=date,proto3" form:"date" json:"date,omitempty" query:"date"`                                          // 日期
	TextDay   string  `protobuf:"bytes,2,opt,name=text_day,json=textDay,proto3" form:"text_day" json:"text_day,omitempty" query:"text_day"`             // 白天天气
	TextNight string  `protobuf:"bytes,3,opt,name=text_night,json=textNight,proto3" form:"text_night" json:"text_night,omitempty" query:"text_night"`   // 夜间天气
	HighTemp  float32 `protobuf:"fixed32,4,opt,name=high_temp,json=highTemp,proto3" form:"high_temp" json:"high_temp,omitempty" query:"high_temp"`      // 最高温度
	LowTemp   float32 `protobuf:"fixed32,5,opt,name=low_temp,json=lowTemp,proto3" form:"low_temp" json:"low_temp,omitempty" query:"low_temp"`           // 最低温度
	Rainfall  float32 `protobuf:"fixed32,6,opt,name=rainfall,proto3" form:"rainfall" json:"rainfall,omitempty" query:"rainfall"`                        // 降雨量
	Precip    float32 `protobuf:"fixed32,7,opt,name=precip,proto3" form:"precip" json:"precip,omitempty" query:"precip"`                                // 降水概率
	WindDir   string  `protobuf:"bytes,8,opt,name=wind_dir,json=windDir,proto3" form:"wind_dir" json:"wind_dir,omitempty" query:"wind_dir"`             // 风向
	WindSpeed float32 `protobuf:"fixed32,9,opt,name=wind_speed,json=windSpeed,proto3" form:"wind_speed" json:"wind_speed,omitempty" query:"wind_speed"` // 风速
	WindScale string  `protobuf:"bytes,10,opt,name=wind_scale,json=windScale,proto3" form:"wind_scale" json:"wind_scale,omitempty" query:"wind_scale"`  // 风力等级
	Humidity  float32 `protobuf:"fixed32,11,opt,name=humidity,proto3" form:"humidity" json:"humidity,omitempty" query:"humidity"`                       // 湿度
}

func (x *DailyWeather) Reset() {
	*x = DailyWeather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_gateway_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyWeather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyWeather) ProtoMessage() {}

func (x *DailyWeather) ProtoReflect() protoreflect.Message {
	mi := &file_api_gateway_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyWeather.ProtoReflect.Descriptor instead.
func (*DailyWeather) Descriptor() ([]byte, []int) {
	return file_api_gateway_proto_rawDescGZIP(), []int{49}
}

func (x *DailyWeather) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyWeather) GetTextDay() string {
	if x != nil {
		return x.TextDay
	}
	return ""
}

func (x *DailyWeather) GetTextNight() string {
	if x != nil {
		return x.TextNight
	}
	return ""
}

func (x *DailyWeather) GetHighTemp() float32 {
	if x != nil {
		return x.HighTemp
	}
	return 0
}

func (x *DailyWeather) GetLowTemp() float32 {
	if x != nil {
		return x.LowTemp
	}
	return 0
}

func (x *DailyWeather) GetRainfall() float32 {
	if x != nil {
		return x.Rainfall
	}
	return 0
}

func (x *DailyWeather) GetPrecip() float32 {
	if x != nil {
		return x.Precip
	}
	return 0
}

func (x *DailyWeather) GetWindDir() string {
	if x != nil {
		return x.WindDir
	}
	return ""
}

func (x *DailyWeather) GetWindSpeed() float32 {
	if x != nil {
		return x.WindSpeed
	}
	return 0
}

func (x *DailyWeather) GetWindScale() string {
	if x != nil {
		return x.WindScale
	}
	return ""
}

func (x *DailyWeather) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

var File_api_gateway_proto protoreflect.FileDescriptor

var file_api_gateway_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x1a, 0x1b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x68, 0x65,
	0x72, 0x74, 0x7a, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x72,
	0x61, 0x67, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x07,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x09, 0x0a,
	0x07, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x22, 0x2f, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x89, 0x01, 0x0a, 0x07, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69,
	0x64, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xb2, 0xbb, 0x18, 0x03, 0x6d, 0x73, 0x67, 0xda, 0xbb,
	0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x04,
	0x6d, 0x73, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xb2, 0xbb, 0x18, 0x04,
	0x6d, 0x73, 0x67, 0x32, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x32, 0x12, 0x19, 0x0a, 0x03, 0x72, 0x61,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xaa, 0xbb, 0x18, 0x03, 0x72, 0x61, 0x77,
	0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x2f, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x32, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0xda, 0xbb,
	0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x30,
	0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x32, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x3f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xca, 0xbb, 0x18, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x78, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x15, 0xb2, 0xbb, 0x18, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x12, 0xb2, 0xbb, 0x18, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x6e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x61, 0x67, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xbc, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xb2, 0xbb, 0x18, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0f, 0xb2, 0xbb, 0x18, 0x04, 0x70, 0x61, 0x67, 0x65, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e,
	0x30, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x14, 0xb2, 0xbb, 0x18, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xb2, 0xbb, 0x18, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb9,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x61, 0x67, 0x5f, 0x73, 0x76,
	0x72, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x0d, 0x45, 0x6e,
	0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x15, 0xca, 0xbb, 0x18, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0xda,
	0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x35, 0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xc1, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xca, 0xbb,
	0x18, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb, 0x18, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x28, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x11, 0xb2, 0xbb, 0x18, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03,
	0x24, 0x3e, 0x30, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xb2, 0xbb, 0x18,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x96, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xb2, 0xbb, 0x18, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0f, 0xb2, 0xbb, 0x18, 0x04, 0x70, 0x61, 0x67, 0x65, 0xda, 0xbb, 0x18, 0x03, 0x24,
	0x3e, 0x30, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x14, 0xb2, 0xbb, 0x18,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e,
	0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x09,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x12, 0xb2, 0xbb, 0x18, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xb2, 0xbb, 0x18, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x25, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x10, 0xb2, 0xbb, 0x18, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e,
	0x30, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x22, 0x70, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x0e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x64,
	0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x6f, 0x63,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xca, 0xbb,
	0x18, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21,
	0x3d, 0x27, 0x27, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xca, 0xbb,
	0x18, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xca, 0xbb, 0x18, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xb9, 0x02,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2b,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x12, 0xca, 0xbb, 0x18, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03,
	0x24, 0x3e, 0x30, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xca, 0xbb,
	0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d,
	0x27, 0x27, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x62, 0x0a, 0x0b, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x41, 0xca, 0xbb, 0x18, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0xda, 0xbb, 0x18, 0x2e, 0x24, 0x69, 0x6e, 0x3d, 0x5b, 0x27, 0x66, 0x61, 0x63, 0x74, 0x27,
	0x2c, 0x27, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x27, 0x2c, 0x27, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x27, 0x2c, 0x27, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x27, 0x5d, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x1e, 0xca, 0xbb, 0x18, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0xda, 0xbb, 0x18, 0x0c, 0x24, 0x3e, 0x3d, 0x30, 0x20, 0x26, 0x26, 0x20, 0x24,
	0x3c, 0x3d, 0x31, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x51, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x14, 0xb2, 0xbb, 0x18, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0xda, 0xbb,
	0x18, 0x03, 0x24, 0x3e, 0x30, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22,
	0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x22, 0x65, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xb2, 0xbb, 0x18, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27, 0x27, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x10, 0xb2, 0xbb, 0x18, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0xda, 0xbb, 0x18, 0x03, 0x24,
	0x3e, 0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6a, 0x0a, 0x11, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xb2, 0xbb, 0x18, 0x09, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0xda, 0xbb, 0x18, 0x03, 0x24, 0x3e, 0x30, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x37, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xef, 0x01, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x65, 0x71, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x51, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65,
	0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xb2, 0xbb, 0x18, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xda, 0xbb, 0x18, 0x05, 0x24, 0x21, 0x3d, 0x27,
	0x27, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x32, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69,
	0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x6e,
	0x64, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6e,
	0x64, 0x44, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72,
	0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15,
	0xb2, 0xbb, 0x18, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xda, 0xbb, 0x18, 0x05,
	0x24, 0x21, 0x3d, 0x27, 0x27, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x8b, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x6f, 0x75,
	0x72, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x06, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x22, 0xb5, 0x01,
	0x0a, 0x0d, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77,
	0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69,
	0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69,
	0x6e, 0x64, 0x44, 0x69, 0x72, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xb2,
	0xbb, 0x18, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xda, 0xbb, 0x18, 0x05, 0x24,
	0x21, 0x3d, 0x27, 0x27, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x05, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x22, 0xbd, 0x02, 0x0a, 0x0c, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x65, 0x78, 0x74, 0x44, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x68, 0x69, 0x67, 0x68,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x61, 0x69, 0x6e, 0x66, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x72, 0x61, 0x69, 0x6e, 0x66, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x32, 0x97, 0x0f, 0x0a, 0x11, 0x41, 0x70, 0x69,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x73, 0x70, 0x22, 0x09, 0xca, 0xc1, 0x18, 0x05, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x3d, 0x0a,
	0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x09, 0xca, 0xc1, 0x18, 0x05, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05,
	0x54, 0x65, 0x73, 0x74, 0x32, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x32, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x32,
	0x52, 0x73, 0x70, 0x22, 0x0a, 0xd2, 0xc1, 0x18, 0x06, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x32, 0x12,
	0x62, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x13,
	0xd2, 0xc1, 0x18, 0x0f, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x10, 0xca, 0xc1, 0x18, 0x0c, 0x2f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x63, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x11, 0xca,
	0xc1, 0x18, 0x0d, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x0a, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x45, 0x6e, 0x64,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x10, 0xd2, 0xc1, 0x18, 0x0c, 0x2f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x64, 0x12, 0x5a, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x22, 0x11, 0xd2, 0xc1, 0x18, 0x0d, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x61, 0x64, 0x64, 0x12, 0x66, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x14, 0xe2, 0xc1, 0x18, 0x10, 0x2f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x0e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x14,
	0xca, 0xc1, 0x18, 0x10, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x5e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70,
	0x22, 0x12, 0xca, 0xc1, 0x18, 0x0e, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x10, 0xd2, 0xc1, 0x18, 0x0c,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x22,
	0x0f, 0xd2, 0xc1, 0x18, 0x0b, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x2f, 0x61, 0x64, 0x64,
	0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x73, 0x70, 0x22, 0x0f, 0xca, 0xc1, 0x18, 0x0b, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x2f, 0x67, 0x65, 0x74, 0x12, 0x64, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x73, 0x70, 0x22, 0x12, 0xca, 0xc1, 0x18, 0x0e, 0x2f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x5e, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x73, 0x70, 0x22, 0x12, 0xe2, 0xc1, 0x18, 0x0e, 0x2f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x22, 0x10, 0xd2, 0xc1, 0x18, 0x0c, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x67, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x22, 0x15, 0xca,
	0xc1, 0x18, 0x11, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x2f, 0x67, 0x65, 0x74, 0x12, 0x56, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x10, 0xca, 0xc1, 0x18, 0x0c,
	0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x6b, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x22, 0x13, 0xca, 0xc1, 0x18, 0x0f, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68,
	0x65, 0x72, 0x2f, 0x68, 0x6f, 0x75, 0x72, 0x6c, 0x79, 0x12, 0x67, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x12,
	0xca, 0xc1, 0x18, 0x0e, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x42, 0x2a, 0x5a, 0x28, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_gateway_proto_rawDescOnce sync.Once
	file_api_gateway_proto_rawDescData = file_api_gateway_proto_rawDesc
)

func file_api_gateway_proto_rawDescGZIP() []byte {
	file_api_gateway_proto_rawDescOnce.Do(func() {
		file_api_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_gateway_proto_rawDescData)
	})
	return file_api_gateway_proto_rawDescData
}

var file_api_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_api_gateway_proto_goTypes = []interface{}{
	(*BaseRsp)(nil),             // 0: api_gateway.BaseRsp
	(*PingReq)(nil),             // 1: api_gateway.PingReq
	(*PingRsp)(nil),             // 2: api_gateway.PingRsp
	(*TestReq)(nil),             // 3: api_gateway.TestReq
	(*TestRsp)(nil),             // 4: api_gateway.TestRsp
	(*Test2Req)(nil),            // 5: api_gateway.Test2Req
	(*Test2Rsp)(nil),            // 6: api_gateway.Test2Rsp
	(*CreateSessionReq)(nil),    // 7: api_gateway.CreateSessionReq
	(*CreateSessionRsp)(nil),    // 8: api_gateway.CreateSessionRsp
	(*GetSessionReq)(nil),       // 9: api_gateway.GetSessionReq
	(*GetSessionRsp)(nil),       // 10: api_gateway.GetSessionRsp
	(*GetSessionListReq)(nil),   // 11: api_gateway.GetSessionListReq
	(*GetSessionListRsp)(nil),   // 12: api_gateway.GetSessionListRsp
	(*EndSessionReq)(nil),       // 13: api_gateway.EndSessionReq
	(*EndSessionRsp)(nil),       // 14: api_gateway.EndSessionRsp
	(*AddDocumentReq)(nil),      // 15: api_gateway.AddDocumentReq
	(*AddDocumentRsp)(nil),      // 16: api_gateway.AddDocumentRsp
	(*DeleteDocumentReq)(nil),   // 17: api_gateway.DeleteDocumentReq
	(*DeleteDocumentRsp)(nil),   // 18: api_gateway.DeleteDocumentRsp
	(*ListDocumentReq)(nil),     // 19: api_gateway.ListDocumentReq
	(*ListDocumentRsp)(nil),     // 20: api_gateway.ListDocumentRsp
	(*Document)(nil),            // 21: api_gateway.Document
	(*SearchDocumentReq)(nil),   // 22: api_gateway.SearchDocumentReq
	(*SearchDocumentRsp)(nil),   // 23: api_gateway.SearchDocumentRsp
	(*DocumentResult)(nil),      // 24: api_gateway.DocumentResult
	(*CreateUserReq)(nil),       // 25: api_gateway.CreateUserReq
	(*CreateUserRsp)(nil),       // 26: api_gateway.CreateUserRsp
	(*AddMemoryReq)(nil),        // 27: api_gateway.AddMemoryReq
	(*AddMemoryRsp)(nil),        // 28: api_gateway.AddMemoryRsp
	(*GetMemoryReq)(nil),        // 29: api_gateway.GetMemoryReq
	(*GetMemoryRsp)(nil),        // 30: api_gateway.GetMemoryRsp
	(*SearchMemoriesReq)(nil),   // 31: api_gateway.SearchMemoriesReq
	(*SearchMemoriesRsp)(nil),   // 32: api_gateway.SearchMemoriesRsp
	(*Memory)(nil),              // 33: api_gateway.Memory
	(*DeleteMemoryReq)(nil),     // 34: api_gateway.DeleteMemoryReq
	(*DeleteMemoryRsp)(nil),     // 35: api_gateway.DeleteMemoryRsp
	(*ChatRecord)(nil),          // 36: api_gateway.ChatRecord
	(*AddChatRecordReq)(nil),    // 37: api_gateway.AddChatRecordReq
	(*AddChatRecordRsp)(nil),    // 38: api_gateway.AddChatRecordRsp
	(*GetChatRecordsReq)(nil),   // 39: api_gateway.GetChatRecordsReq
	(*GetChatRecordsRsp)(nil),   // 40: api_gateway.GetChatRecordsRsp
	(*GetWeatherReq)(nil),       // 41: api_gateway.GetWeatherReq
	(*GetWeatherRsp)(nil),       // 42: api_gateway.GetWeatherRsp
	(*WeatherInfo)(nil),         // 43: api_gateway.WeatherInfo
	(*GetHourlyWeatherReq)(nil), // 44: api_gateway.GetHourlyWeatherReq
	(*GetHourlyWeatherRsp)(nil), // 45: api_gateway.GetHourlyWeatherRsp
	(*HourlyWeather)(nil),       // 46: api_gateway.HourlyWeather
	(*GetDailyWeatherReq)(nil),  // 47: api_gateway.GetDailyWeatherReq
	(*GetDailyWeatherRsp)(nil),  // 48: api_gateway.GetDailyWeatherRsp
	(*DailyWeather)(nil),        // 49: api_gateway.DailyWeather
	(*rag_svr.SessionInfo)(nil), // 50: rag_svr.SessionInfo
}
var file_api_gateway_proto_depIdxs = []int32{
	50, // 0: api_gateway.GetSessionRsp.session_info:type_name -> rag_svr.SessionInfo
	50, // 1: api_gateway.GetSessionListRsp.session_list:type_name -> rag_svr.SessionInfo
	21, // 2: api_gateway.ListDocumentRsp.documents:type_name -> api_gateway.Document
	24, // 3: api_gateway.SearchDocumentRsp.results:type_name -> api_gateway.DocumentResult
	33, // 4: api_gateway.GetMemoryRsp.memory:type_name -> api_gateway.Memory
	33, // 5: api_gateway.SearchMemoriesRsp.memories:type_name -> api_gateway.Memory
	36, // 6: api_gateway.GetChatRecordsRsp.records:type_name -> api_gateway.ChatRecord
	43, // 7: api_gateway.GetWeatherRsp.weather:type_name -> api_gateway.WeatherInfo
	46, // 8: api_gateway.GetHourlyWeatherRsp.hourly:type_name -> api_gateway.HourlyWeather
	49, // 9: api_gateway.GetDailyWeatherRsp.daily:type_name -> api_gateway.DailyWeather
	1,  // 10: api_gateway.ApiGatewayService.Ping:input_type -> api_gateway.PingReq
	3,  // 11: api_gateway.ApiGatewayService.Test:input_type -> api_gateway.TestReq
	5,  // 12: api_gateway.ApiGatewayService.Test2:input_type -> api_gateway.Test2Req
	7,  // 13: api_gateway.ApiGatewayService.CreateSession:input_type -> api_gateway.CreateSessionReq
	9,  // 14: api_gateway.ApiGatewayService.GetSession:input_type -> api_gateway.GetSessionReq
	11, // 15: api_gateway.ApiGatewayService.GetSessionList:input_type -> api_gateway.GetSessionListReq
	13, // 16: api_gateway.ApiGatewayService.EndSession:input_type -> api_gateway.EndSessionReq
	15, // 17: api_gateway.ApiGatewayService.AddDocument:input_type -> api_gateway.AddDocumentReq
	17, // 18: api_gateway.ApiGatewayService.DeleteDocument:input_type -> api_gateway.DeleteDocumentReq
	22, // 19: api_gateway.ApiGatewayService.SearchDocument:input_type -> api_gateway.SearchDocumentReq
	19, // 20: api_gateway.ApiGatewayService.ListDocument:input_type -> api_gateway.ListDocumentReq
	25, // 21: api_gateway.ApiGatewayService.CreateUser:input_type -> api_gateway.CreateUserReq
	27, // 22: api_gateway.ApiGatewayService.AddMemory:input_type -> api_gateway.AddMemoryReq
	29, // 23: api_gateway.ApiGatewayService.GetMemory:input_type -> api_gateway.GetMemoryReq
	31, // 24: api_gateway.ApiGatewayService.SearchMemories:input_type -> api_gateway.SearchMemoriesReq
	34, // 25: api_gateway.ApiGatewayService.DeleteMemory:input_type -> api_gateway.DeleteMemoryReq
	37, // 26: api_gateway.ApiGatewayService.AddChatRecord:input_type -> api_gateway.AddChatRecordReq
	39, // 27: api_gateway.ApiGatewayService.GetChatRecords:input_type -> api_gateway.GetChatRecordsReq
	41, // 28: api_gateway.ApiGatewayService.GetWeather:input_type -> api_gateway.GetWeatherReq
	44, // 29: api_gateway.ApiGatewayService.GetHourlyWeather:input_type -> api_gateway.GetHourlyWeatherReq
	47, // 30: api_gateway.ApiGatewayService.GetDailyWeather:input_type -> api_gateway.GetDailyWeatherReq
	2,  // 31: api_gateway.ApiGatewayService.Ping:output_type -> api_gateway.PingRsp
	4,  // 32: api_gateway.ApiGatewayService.Test:output_type -> api_gateway.TestRsp
	6,  // 33: api_gateway.ApiGatewayService.Test2:output_type -> api_gateway.Test2Rsp
	8,  // 34: api_gateway.ApiGatewayService.CreateSession:output_type -> api_gateway.CreateSessionRsp
	10, // 35: api_gateway.ApiGatewayService.GetSession:output_type -> api_gateway.GetSessionRsp
	12, // 36: api_gateway.ApiGatewayService.GetSessionList:output_type -> api_gateway.GetSessionListRsp
	14, // 37: api_gateway.ApiGatewayService.EndSession:output_type -> api_gateway.EndSessionRsp
	16, // 38: api_gateway.ApiGatewayService.AddDocument:output_type -> api_gateway.AddDocumentRsp
	18, // 39: api_gateway.ApiGatewayService.DeleteDocument:output_type -> api_gateway.DeleteDocumentRsp
	23, // 40: api_gateway.ApiGatewayService.SearchDocument:output_type -> api_gateway.SearchDocumentRsp
	20, // 41: api_gateway.ApiGatewayService.ListDocument:output_type -> api_gateway.ListDocumentRsp
	26, // 42: api_gateway.ApiGatewayService.CreateUser:output_type -> api_gateway.CreateUserRsp
	28, // 43: api_gateway.ApiGatewayService.AddMemory:output_type -> api_gateway.AddMemoryRsp
	30, // 44: api_gateway.ApiGatewayService.GetMemory:output_type -> api_gateway.GetMemoryRsp
	32, // 45: api_gateway.ApiGatewayService.SearchMemories:output_type -> api_gateway.SearchMemoriesRsp
	35, // 46: api_gateway.ApiGatewayService.DeleteMemory:output_type -> api_gateway.DeleteMemoryRsp
	38, // 47: api_gateway.ApiGatewayService.AddChatRecord:output_type -> api_gateway.AddChatRecordRsp
	40, // 48: api_gateway.ApiGatewayService.GetChatRecords:output_type -> api_gateway.GetChatRecordsRsp
	42, // 49: api_gateway.ApiGatewayService.GetWeather:output_type -> api_gateway.GetWeatherRsp
	45, // 50: api_gateway.ApiGatewayService.GetHourlyWeather:output_type -> api_gateway.GetHourlyWeatherRsp
	48, // 51: api_gateway.ApiGatewayService.GetDailyWeather:output_type -> api_gateway.GetDailyWeatherRsp
	31, // [31:52] is the sub-list for method output_type
	10, // [10:31] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_gateway_proto_init() }
func file_api_gateway_proto_init() {
	if File_api_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Rsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSessionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndSessionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndSessionRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDocumentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDocumentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDocumentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDocumentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDocumentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDocumentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMemoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMemoriesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMemoryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChatRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChatRecordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatRecordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatRecordsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeatherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeatherRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHourlyWeatherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHourlyWeatherRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HourlyWeather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyWeatherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyWeatherRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_gateway_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyWeather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_gateway_proto_goTypes,
		DependencyIndexes: file_api_gateway_proto_depIdxs,
		MessageInfos:      file_api_gateway_proto_msgTypes,
	}.Build()
	File_api_gateway_proto = out.File
	file_api_gateway_proto_rawDesc = nil
	file_api_gateway_proto_goTypes = nil
	file_api_gateway_proto_depIdxs = nil
}
